@if (Visible)
{
    <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="true">
        <div class="toast-header">
            <strong class="me-auto">@Title</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close" @onclick="HideToast"></button>
        </div>
        <div class="toast-body">
            @Message
        </div>
        @if (HasConfirmation)
        {
            <div>
                <button class="btn btn-danger btn-sm" @onclick="Confirm">Yes</button>
                <button class="btn btn-primary btn-sm" @onclick="Reject">No</button>
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public string? Message { get; set; }

    [Parameter]
    public bool HasConfirmation { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public EventCallback<bool> OnConfirmation { get; set; }

    private async Task Confirm()
    {
        await OnConfirmation.InvokeAsync(true);
    }

    private async Task Reject()
    {
        await OnConfirmation.InvokeAsync(false);
    }

    bool Visible { get; set; }

    public async Task HideToast()
    {
        Visible = false;
        await OnClose.InvokeAsync();
    }

    public void Show()
    {
        Visible = true;
        StateHasChanged();
    }
}
